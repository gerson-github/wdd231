const currYear=(new Date).getFullYear(),lastModified=document.lastModified;function getRandomMembers(e,t){return e.sort((()=>.5-Math.random())).slice(0,t)}document.getElementById("lastModified").textContent+=lastModified,document.getElementById("currentYear").textContent=currYear;const toggleViewButton=document.getElementById("toggle-view"),isIndexPage=location.pathname.endsWith("index.html")||"/"===location.pathname;document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelectorAll("nav ul li");e.forEach((t=>{t.addEventListener("click",(function(){e.forEach((e=>e.classList.remove("active"))),this.classList.add("active")}))}));const t=document.querySelector("header button"),n=document.querySelector("nav");t.addEventListener("click",(()=>{n.classList.toggle("open")}));let a=document.querySelector(".business-directory"),o=document.getElementById("list-view");async function i(){try{const e=await fetch("data/members.json");let t=(await e.json()).members;isIndexPage&&(t=getRandomMembers(t,3)),o&&(o.innerHTML=""),a&&(a.innerHTML=""),t.forEach((e=>{const t=document.createElement("div");t.classList.add("business-card"),t.innerHTML=`\n                    <h3>${e.name}</h3>\n                    <p style="border-bottom: 1px solid gray; font-size: 12px; margin: 0; padding: 0;">\n                        ${e.category}\n                    </p>\n                    <div class="business-card-detail">\n                        <img src="images/${e.image}" alt="${e.name}" width="80" loading="lazy">\n                        <div>\n                            <dl class="card-content">\n                                <dt>EMAIL:</dt>\n                                <dd><a href="mailto:${e.email||"#"}">${e.email||"N/A"}</a></dd>\n                                <dt>PHONE:</dt>\n                                <dd>${e.phone}</dd>\n                                <dt>ADDRESS:</dt>\n                                <dd>${e.address}</dd>\n                                <dt>URL:</dt>\n                                <dd><a href="${e.website}" target="_blank">${e.website}</a></dd>\n                                <dt></dt>\n                                <dd><button class="button">Learn More</button></dd>\n                            </dl>\n                        </div>\n                    </div>\n                `,a.appendChild(t)}))}catch(e){}}toggleViewButton&&toggleViewButton.addEventListener("click",(()=>{a.classList.toggle("list-view"),a.classList.contains("list-view")?(toggleViewButton.textContent="Switch to Card View",async function(){try{const e=await fetch("data/members.json"),t=await e.json();o&&(o.innerHTML=""),a&&(a.innerHTML="");const n=document.createElement("table");n.innerHTML="\n                <thead>\n                    <tr>\n                        <th>Company Name</th>\n                        <th>Type</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>Website</th>\n                    </tr>\n                </thead>\n                <tbody></tbody>\n            ";const i=n.querySelector("tbody");t.members.forEach((e=>{const t=document.createElement("tr");t.innerHTML=`\n                    <td data-label="Company Name">${e.name}</td>\n                    <td data-label="Type">${e.category}</td>\n                    <td data-label="Email"><a href="mailto:${e.email||"#"}">${e.email||"N/A"}</a></td>\n                    <td data-label="Phone">${e.phone}</td>\n                    <td data-label="Address">${e.address}</td>\n                    <td data-label="Website"><a href="${e.website}" target="_blank">Visit</a></td>\n                `,i.appendChild(t)})),o.appendChild(n)}catch(e){}}()):(toggleViewButton.textContent="Switch to List View",i())})),i()})),document.addEventListener("DOMContentLoaded",(async()=>{const e="9085b3b21530cca83ec19fa4f9cfd2ed",t="Victoria",n=`https://api.openweathermap.org/data/2.5/weather?q=${t},CA&units=metric&appid=${e}`,a=`https://api.openweathermap.org/data/2.5/forecast?q=${t},CA&units=metric&appid=${e}`;try{const e=await fetch(n);if(!e.ok)throw new Error("Failed to fetch weather data");const t=await e.json(),a=Math.round(t.main.temp),o=Math.round(t.main.temp_max),i=Math.round(t.main.temp_min),d=t.main.humidity,r=t.weather[0].description,s=(t.weather[0].icon,new Date(1e3*t.sys.sunrise).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})),c=new Date(1e3*t.sys.sunset).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});document.querySelector(".weather-temp").innerHTML=`${a}&deg;C`,document.querySelector(".weather-condition").textContent=r,document.querySelector(".weather-high").textContent=`${o}°C`,document.querySelector(".weather-low").textContent=`${i}°C`,document.querySelector(".weather-humidity").textContent=`${d}%`,document.querySelector(".weather-sunrise").textContent=s,document.querySelector(".weather-sunset").textContent=c}catch(e){const t=document.querySelector(".current-weather");t&&(t.innerHTML="<p>Weather data unvavailable</p>")}try{const e=await fetch(a);if(!e.ok)throw new Error("Failed to fetch forecast data");const t=await e.json();let n={};t.list.forEach((e=>{let t=new Date(1e3*e.dt).toLocaleDateString("en-US",{weekday:"long"});n[t]||(n[t]=Math.round(e.main.temp))})),Object.entries(n).slice(0,7).forEach(((e,t)=>{document.querySelector(`.forecast-day-${t+1}`).textContent=e[0]+":",document.querySelector(`.forecast-temp-${t+1}`).innerHTML=`${e[1]}°C`}))}catch(e){const t=document.querySelector(".weather-forecast");t&&(t.innerHTML="<p>Weather data unvavailable</p>")}}));const agora=Date.now(),mensagemContainer=document.getElementById("visit-message"),ultimaVisita=localStorage.getItem("ultimaVisita");let mensagem="";if(ultimaVisita){const e=parseInt(ultimaVisita,10),t=864e5,n=Math.floor((agora-e)/t);mensagem=n<1?"Back so soon! Awesome!":1===n?"Você nos visitou há 1 dia.":`You last visited ${n} days ago.`}else mensagem="Welcome! Let us know if you have any questions.";mensagemContainer.textContent=mensagem,mensagemContainer.classList.add("show"),setTimeout((()=>{mensagemContainer.classList.remove("show"),mensagemContainer.classList.add("hide")}),4e3),setTimeout((()=>{mensagemContainer.remove()}),5e3),localStorage.setItem("ultimaVisita",agora);